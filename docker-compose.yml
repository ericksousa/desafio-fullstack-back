services:
  app:
    build:
      context: ./docker
      dockerfile: Dockerfile
    container_name: "app"
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./:/var/www
      - ./docker/php/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
    networks:
      - network_app
    depends_on:
      - mysql
      - redis
      - npm
      - nginx

  nginx:
    image: nginx:alpine
    container_name: "nginx"
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - network_app

  npm:
    image: node:18.20.3-alpine
    container_name: "npm"
    volumes:
      - ./:/var/www
    working_dir: /var/www
    entrypoint: ["npm"]
    networks:
      - network_app

  redis:
    image: redis:alpine
    restart: always
    container_name: "redis"
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    networks:
      - network_app

  mysql:
    container_name: mysql
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: laravel
      MYSQL_USER: laravel
      MYSQL_PASSWORD: secret
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - network_app

volumes:
  mysql_data:
  redis_data:

networks:
  network_app:
    driver: bridge
